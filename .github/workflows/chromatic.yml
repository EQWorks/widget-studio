name: Chromatic

on: [pull_request, push]

jobs:
  # chromatic-deployment:
  #   runs-on: ubuntu-latest
  #   outputs:
  #     storybook-url: ${{ steps['chromatic-publish'].outputs.storybookUrl}}
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2
  #       # Version 2 of the actions/checkout action will only checkout a single commit without history by default.
  #       # Chromatic needs the full git history in order to track changes over time.
  #       # see https://github.com/chromaui/action#:~:text=the%20Chromatic%20CLI-,Checkout,-depth
  #       with:
  #         fetch-depth: 0

  #     - name: Use Node.js
  #       uses: actions/setup-node@v2
  #       with:
  #         node-version: 14.x
  #         registry-url: https://npm.pkg.github.com/
  #         scope: "@eqworks"

  #     - run: yarn install
  #       env:
  #         NODE_AUTH_TOKEN: ${{ secrets.CD_GITHUB_TOKEN }}

  #     - name: Publish to Chromatic
  #       id: chromatic-publish
  #       uses: chromaui/action@v1
  #       with:
  #         token: ${{ secrets.GITHUB_TOKEN }}
  #         projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
  #         exitZeroOnChanges: true
  #         autoAcceptChanges: true
  #       env:
  #         STORYBOOK_API_HOST: "https://api.locus.place"
  #         STORYBOOK_API_STAGE: "dev"
  #         STORYBOOK_KEY_WARDEN_HOST: "https://auth.eqworks.io"
  #         STORYBOOK_KEY_WARDEN_STAGE: "dev"

  storybook-pr-comment:
    # needs: chromatic-deployment
    # if: github.event_name == 'pull_request' && needs.chromatic-deployment.result == 'success'
    runs-on: ubuntu-latest
    steps:
      - uses: eqworks/sticky-pull-request-comment@v2
        with:
          # STORYBOOK_URL: ${{ needs.chromatic-deployment.outputs.storybook-url }}
          message: |
            ${{ github.sha }}

      # - uses: actions/github-script@v5
      #   env:
      #     STORYBOOK_URL: ${{ needs.chromatic-deployment.outputs.storybook-url }}
      #   with:
      #     github-token: ${{ secrets.GITHUB_TOKEN }}
      #     script: |
      #       github.rest.issues.createComment(
      #         {
      #           issue_number: context.issue.number,
      #           owner: context.repo.owner,
      #           repo: context.repo.repo,
      #           body: `**[ðŸ“š New Storybook preview (${context.sha.substring(0,7)})](${process.env.STORYBOOK_URL.replace('/iframe.html', '')})**`
      #         });
